openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: https://localhost:8080
    description: Generated server url
paths:
  /api/v1/admin/patients:
    get:
      tags:
        - patient-controller
      summary: Get list of patients
      operationId: getPatients
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Get list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPatientDTO'
        '400':
          description: Incorrect values (SQL injection, for example). Full description in "message" field
          content: {}
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - patient-controller
      summary: Create new patient
      operationId: addPatient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientLongDTO'
        required: true
      responses:
        '200':
          description: Patient created, returning patient with id field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientLongDTO'
        '400':
          description: Incorrect values (SQL injection, for example). Full description in "message" field
          content: {}
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/case:
    post:
      tags:
        - disease-case-controller
      summary: Create new disease case
      operationId: addPatient_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiseaseCaseDTO'
        required: true
      responses:
        '200':
          description: Case created, returning disease case with id field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseCaseDTO'
        '400':
          description: Incorrect values (SQL injection, for example). Full description in "message" field
          content: {}
        '401':
          description: Trying register as another registrator
          content: {}
  /api/v1/admin/patient/{id}:
    get:
      tags:
        - patient-controller
      summary: Get specific patient
      operationId: getPatient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientLongDTO'
        '400':
          description: No patient with such id. Full description in "message" field
          content: {}
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/healers:
    get:
      tags:
        - healer-controller
      summary: Get list of healers
      operationId: getHealers
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Get list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHealerDTO'
        '400':
          description: Incorrect values (SQL injection, for example). Full description in "message" field
          content: {}
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/healer/{id}:
    get:
      tags:
        - healer-controller
      summary: Get specific healer
      operationId: getHealer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get healer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealerLongDTO'
        '400':
          description: No patient with such id. Full description in "message" field
          content: {}
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/disease/{id}:
    get:
      tags:
        - disease-controller
      summary: Get specific disease
      operationId: getDisease
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get disease
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseDTO'
        '400':
          description: No disease with such id. Full description in "message" field
          content: {}
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/administrator/{id}:
    get:
      tags:
        - administrator-controller
      summary: Get specific administrator
      operationId: getAdministrator
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get administrator
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorLongDTO'
        '400':
          description: No administrator with such id. Full description in "message" field
          content: {}
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    DiseaseCaseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        registratorId:
          type: integer
          format: int32
        healerId:
          type: integer
          format: int32
        patientId:
          type: integer
          format: int32
        diseaseId:
          type: integer
          format: int32
        patientComplaints:
          type: string
        registrationTime:
          type: string
          format: date-time
        actions:
          type: string
    PatientLongDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        surname:
          type: string
        registrationTime:
          type: string
          format: date-time
        socialStatus:
          type: string
        diseaseCases:
          type: array
          items:
            $ref: '#/components/schemas/DiseaseCaseDTO'
        isMale:
          type: boolean
        isMage:
          type: boolean
    ListPatientDTO:
      type: object
      properties:
        patients:
          type: array
          items:
            $ref: '#/components/schemas/PatientShortDTO'
    PatientShortDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        surname:
          type: string
    HealerShortDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        surname:
          type: string
    ListHealerDTO:
      type: object
      properties:
        healers:
          type: array
          items:
            $ref: '#/components/schemas/HealerShortDTO'
    HealerLongDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        surname:
          type: string
        workStartDate:
          type: string
          format: date
        healerPower:
          type: integer
          format: int32
        queue:
          type: integer
          format: int32
        socialStatus:
          type: string
        isMale:
          type: boolean
    DiseaseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        symptoms:
          type: string
        recipe:
          type: string
    AdministratorLongDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        surname:
          type: string
        workStartDate:
          type: string
          format: date
        socialStatus:
          type: string
        isMale:
          type: boolean
